{"version":3,"sources":["components/viewContainer.js","components/damageButtons.js","components/stat.js","components/attribute.js","components/button.js","components/effect.js","components/monsterWidget.js","state/index.js","components/mainView.js","components/form.js","components/addMonsterView.js","data/monsters.js","App.js","state/persist.js","index.js","reducer/index.js","state/initial.js"],"names":["ViewContainer","styled","div","DamageButtonContainer","DamageButton","img","props","size","DamageButtons","onDamage","onClick","src","StatsContainer","Stat","AttributeContainer","attributesWithIcon","Attribute","attributeText","toLowerCase","split","attribute","value","indexOf","alt","ButtonBase","button","TokenButton","TextButton","EffectsContainer","EffectIconContainer","type","RemoveEffectButton","AddEffectButton","AddEffectDialogBackdrop","AddEffectDialog","Effects","onEffectRemoved","onEffectAdded","effects","useState","addEffectDialogVisible","setAddEffectDialogVisible","map","x","key","onRemove","EffectIcon","MonsterWidgetContainer","MonsterImage","NumberCircle","elite","HealthDisplay","MonsterWidget","monster","number","name","attributes","i","attack","range","move","hp","StateContext","createContext","getState","useContext","MonsterWidgetsContainer","AddButton","MainView","monsters","dispatch","takeDamage","damage","payload","id","effect","to","as","Link","Object","values","FormGroup","FormGroupTitle","span","inputBase","Input","input","DropDown","select","CheckboxContainer","CheckboxStyle","Checkbox","title","checked","onChange","StepTitle","h1","MonsterSelectionView","MonsterSelectionItem","selected","withRouter","history","selectedMonster","setSelectedMonster","monsterLevel","setMonsterLevel","monsterNumbers","setMonsterNumbers","isElite","setIsElite","state","duplicateNumbers","length","filter","m","keys","monsterStats","e","target","level","trim","forEach","push","disabled","App","document","basename","path","component","AddMonsterView","match","save","data","JSON","stringify","localStorage","setItem","GlobalStyle","createGlobalStyle","ReactDOM","render","reducer","initialState","children","Provider","useReducer","action","existingMonster","newMonster","monsterClone","currentEffects","nextId","newMonsters","levelInfo","normal","health","getMonsterObject","savedState","getItem","parse","load","getInitialState","getElementById"],"mappings":"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","file":"static/js/main.53dd1aef.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const ViewContainer = styled.div`\n    height: 100vh;\n    width: 100vw;\n    padding-left: 8vw;\n    padding-right: 8vw;\n    padding-top: 10vh;\n    box-sizing: border-box;\n\n    @media only screen and (max-device-width: 812px) {\n        padding-left: 8vw;\n        padding-right: 8vw;\n        padding-top: 5vh;\n        margin-top: 80px;\n        margin-bottom: 40px;\n    }\n`;\n","import React from 'react'\nimport styled from 'styled-components';\n\nconst DamageButtonContainer = styled.div`\n    justify-self: flex-end;\n    display: flex;\n    align-items: center;\n    justify-content: space-evenly;\n`;\n\nconst DamageButton = styled.img`\n    cursor:pointer;\n    width: ${props => props.size};\n    height: ${props => props.size};\n\n    :hover {\n        transform: scale(1.1);\n    }\n`;\n\nconst DamageButtons = ({onDamage}) =>\n    <DamageButtonContainer>\n        <DamageButton onClick={() => onDamage(1)} src=\"./images/damage-1.png\" size=\"40px\"/>\n        <DamageButton onClick={() => onDamage(5)} src=\"./images/damage-5.png\" size=\"45px\" />\n        <DamageButton onClick={() => onDamage(10)} src=\"./images/damage-10.png\" size=\"50px\" />\n    </DamageButtonContainer>\n\nexport default DamageButtons;","import styled from 'styled-components';\n\nexport const StatsContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n`;\n\nexport const Stat = styled.div`\n    flex-grow: 0;\n    margin-right: 10px;\n\n    :last-child {\n        margin-right: 0;        \n    }\n\n    img {\n        height: 24px;\n        margin-right: 2px;\n    }\n\n    span {\n        font-family: 'pirata-one';\n        font-size: 32px;\n    }\n\n    @media only screen and (max-device-width: 812px) {\n        margin-right: 5px;\n    }\n`;","import React from 'react'\nimport styled from 'styled-components';\n\nimport {StatsContainer, Stat} from './stat';\n\nexport const AttributeContainer = styled(StatsContainer)`\n`;\n\nconst attributesWithIcon = ['curse', 'retaliate', 'pierce', 'shield', 'immobilize', 'flying', 'poison', 'wound', 'target', 'muddle', 'stun', 'disarm']\nexport const Attribute = ({attributeText}) => {\n    const [attribute, value] = attributeText.toLowerCase().split(' ');\n\n    if(attributesWithIcon.indexOf(attribute) !== -1){\n        return (\n            <Stat>\n                <img src={`./images/icons/${attribute}.png`} alt=''/>\n                <span>{value}</span>\n            </Stat>\n        );\n    }else{\n        return <></>;\n    }\n}","import styled from 'styled-components';\n\nconst ButtonBase = styled.button`\n    background-color: rgba(255,255,255, 0.6);\n    font-family: 'custom-font';\n    border: 2px solid black;\n    color: black;\n    text-decoration: none;\n\n    :disabled {\n        opacity: 0.5;\n    }\n\n    :hover {\n        border-color: gray;\n        cursor: pointer;\n    }\n`;\n\nexport const TokenButton = styled(ButtonBase)`\n    padding: 1px 3px;\n    font-size: 1rem;\n    line-height: 14px;\n    img {\n        height: 20px;\n    }\n`;\n\nexport const TextButton = styled(ButtonBase)`\n    padding: 0.5rem;\n    font-size: 2em;\n`;","import React, { useState } from 'react'\nimport styled from 'styled-components';\n\nimport { TokenButton } from './button';\n\nconst EffectsContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    margin-top: 5px;\n    padding: 5px;\n    border: 2px solid #B5A596;\n    align-items: center;\n`;\n\nconst EffectIconContainer = styled.div`\n    width: 32px;\n    height: 32px;\n    background-image: url('./images/icons/${props => props.type}.png');\n    background-size: contain;\n    justify-self: center;\n    margin-right: 10px;\n\n    :hover {\n        cursor: pointer;\n\n        button {\n            transform: scale(1.1);\n        }\n    }\n\n    @media only screen and (max-device-width: 812px) {\n        margin-right: 2px;\n    }\n`;\n\nconst RemoveEffectButton = styled.button`\n    border: none;\n    background-color: white;\n    border-radius: 100%;\n    width: 15px;\n    height: 15px;\n    text-align: center;\n    font-weight: bold;\n    font-size: 0.6em;\n    padding: 0;\n    float:right;\n    margin-right: -5px;\n    margin-top: -2px;\n\n    :hover {\n        cursor: pointer;\n    }\n`;\n\nconst AddEffectButton = styled(TokenButton)`\n    display: block;\n    margin-right: 10px;\n    height: 30px;\n\n    @media only screen and (max-device-width: 812px) {\n        margin-right: 1px;\n    }\n`;\n\nconst AddEffectDialogBackdrop = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0,0,0,0.7);\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    z-index: 9;\n`;\n\nconst AddEffectDialog = styled.div`\n    z-index: 10;\n    max-width: 500px;\n    height: 50px;\n    background-color: rgba(255,255,255, 0.8);\n    border: 2px solid black;\n    padding: 10px;\n`;\n\nexport const Effects = ({ onEffectRemoved, onEffectAdded, effects }) => {\n    const [addEffectDialogVisible, setAddEffectDialogVisible] = useState(false);\n\n    return (\n        <EffectsContainer>\n            {addEffectDialogVisible &&\n                <AddEffectDialogBackdrop onClick={() => setAddEffectDialogVisible(false)}>\n                    <AddEffectDialog>\n                        <RemoveEffectButton onClick={() => setAddEffectDialogVisible(false)}>x</RemoveEffectButton>\n                        <EffectsContainer>\n                            <EffectIconContainer type=\"poison\" onClick={() => onEffectAdded('poison')}/>\n                            <EffectIconContainer type=\"stun\" onClick={() => onEffectAdded('stun')}/>\n                            <EffectIconContainer type=\"wound\" onClick={() => onEffectAdded('wound')}/>\n                            <EffectIconContainer type=\"immobilize\" onClick={() => onEffectAdded('immobilize')}/>\n                            <EffectIconContainer type=\"muddle\" onClick={() => onEffectAdded('muddle')}/>\n                            <EffectIconContainer type=\"disarm\" onClick={() => onEffectAdded('disarm')}/>\n                            <EffectIconContainer type=\"strengthen\" onClick={() => onEffectAdded('strengthen')}/>\n                        </EffectsContainer>\n                    </AddEffectDialog>\n                </AddEffectDialogBackdrop>\n            }\n\n            <AddEffectButton onClick={() => setAddEffectDialogVisible(true)}>\n                +\n            </AddEffectButton>\n\n            {effects.map(x =>\n                <EffectIcon key={x} type={x} onRemove={() => onEffectRemoved(x)} />\n            )}\n        </EffectsContainer>\n    );\n}\n\nconst EffectIcon = ({ type, onRemove }) =>\n    <EffectIconContainer type={type} onClick={onRemove}>\n        <RemoveEffectButton onClick={onRemove}>X</RemoveEffectButton>\n    </EffectIconContainer>","import React from 'react'\nimport styled from 'styled-components';\n\nimport DamageButtons from './damageButtons';\nimport { Stat, StatsContainer } from './stat';\nimport { Attribute, AttributeContainer } from './attribute';\nimport { TokenButton } from './button';\nimport { Effects } from './effect';\n\nconst MonsterWidgetContainer = styled.div`\n    font-family: 'pirata-one';\n    display: flex;\n    flex-direction: column;\n    flex-basis: 200px;\n    margin: 2px;\n    padding: 5px;\n    box-sizing: border-box;\n    border-width: 2.5px;\n    border-style: solid;\n    border-image: \n        linear-gradient(\n            to bottom, \n            #755E46, \n            rgba(0, 0, 0, 0)\n        ) 1 100%;\n    border-image-slice: 30 30% 45;\n    margin-left: 10px;\n    margin-right: 10px;\n\n    :first-child {\n        margin-left: 0;\n    }\n\n    @media only screen and (max-device-width: 812px) {\n        :first-child {\n            margin-left: 5px;\n        }\n        margin-left: 5px;\n        margin-right: 0;\n\n        flex-basis: 120px;\n    }\n`;\n\nconst MonsterImage = styled.div`\n    padding: 0 20px;\n    img {\n        width: 100%;\n        margin-top: -30px;\n    }\n`;\n\nconst NumberCircle = styled.div`\n    background-color: black;\n    color: white;\n    border-radius: 100%;\n    width: 40px;\n    height: 40px;\n    line-height: 40px;\n    text-align: center;\n    vertical-align: middle;\n    z-index: 2;\n    position: relative;\n    margin-left: -24px;\n    margin-top: -4px;\n    border-width: 4px;\n    border-style: solid;\n    border-color: ${props => props.elite ? '#efb413' : 'white'};\n    font-size: 2rem;\n\n    @media only screen and (max-device-width: 812px) {\n        font-size: 1.5rem;\n        width: 35px;\n        height: 35px;\n        line-height: 35px;\n    }\n`;\n\nconst HealthDisplay = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content:center;\n    flex-grow: 1;\n\n    span {\n        font-size: 2.8em;\n        margin-right: 5px;\n    }\n`;\n\nconst MonsterWidget = ({ monster, onDamage, onEffectRemoved, onEffectAdded }) =>\n    <MonsterWidgetContainer>\n        <MonsterImage>\n            <NumberCircle elite={monster.elite}>{monster.number}</NumberCircle>\n            <img src={`./images/monsters/Horz-${monster.name}.png`} alt='' />\n        </MonsterImage>\n\n        <AttributeContainer>\n            {monster.attributes.map((x, i) => <Attribute key={i} attributeText={x} />)}\n        </AttributeContainer>\n\n        <StatsContainer>\n            <Stat>\n                <img src=\"./images/icons/attack.png\" alt=''/>\n                <span>{monster.attack}</span>\n            </Stat>\n            <Stat>\n                <img src=\"./images/icons/range.png\" alt='' />\n                <span>{monster.range}</span>\n            </Stat>\n            <Stat>\n                <img src=\"./images/icons/move.png\" alt='' />\n                <span>{monster.move}</span>\n            </Stat>\n        </StatsContainer>\n\n        <HealthDisplay>\n            <span>{monster.hp} hp</span>\n\n            <TokenButton onClick={() => onDamage(-1)}>\n                <img src=\"./images/icons/heal.png\" alt='' />\n            </TokenButton>\n        </HealthDisplay>\n\n        <DamageButtons onDamage={onDamage} />\n\n        <Effects effects={monster.effects || []} onEffectRemoved={onEffectRemoved} onEffectAdded={onEffectAdded}/>\n    </MonsterWidgetContainer>\n\nexport default MonsterWidget;","import React, { createContext, useContext, useReducer } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({ reducer, initialState, children }) => (\r\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n    {children}\r\n  </StateContext.Provider>\r\n);\r\n\r\nStateProvider.propTypes = {\r\n  /**\r\n   * @return {React.Node}\r\n   */\r\n  children: PropTypes.node.isRequired,\r\n\r\n  /**\r\n   * Object containing initial state value.\r\n   */\r\n  initialState: PropTypes.shape({}).isRequired,\r\n\r\n  /**\r\n   *\r\n   * @param {object} state\r\n   * @param {object} action\r\n   */\r\n  reducer: PropTypes.func.isRequired\r\n};\r\n\r\n// eslint-disable-next-line react-hooks/rules-of-hooks\r\nexport const getState = () => useContext(StateContext);","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { ViewContainer } from './viewContainer';\nimport MonsterWidget from './monsterWidget';\nimport { TextButton } from './button';\n\nimport { getState } from '../state'\n\nconst MonsterWidgetsContainer = styled.div`\n    display: flex;\n    width: 100%;\n    flex-wrap: wrap;\n`;\n\nconst AddButton = styled(TextButton)`\n    font-size: 4rem;\n    line-height: 48px;\n    display: block;\n    width: 40px;\n    height: 40px;\n    vertical-align: middle;\n    text-align: center;\n    position: absolute;\n    z-index: 2;\n    top: 15px;\n    left: 15px;\n\n    @media only screen and (max-device-width: 812px) {\n        font-size: 3rem;\n        line-height: 32px;\n        width: 24px;\n        height: 24px;\n    }\n`;\n\nconst MainView = () => {\n    const [{ monsters }, dispatch] = getState();\n\n    const takeDamage = (monster) =>\n        (damage) => {\n            dispatch({\n                type: 'take_damage',\n                payload: {\n                    id: monster.id,\n                    damage\n                }\n            })\n        }\n\n    const onEffectRemoved = (monster) =>\n        (effect) => {\n            dispatch({\n                type: 'remove_effect',\n                payload: {\n                    id: monster.id,\n                    effect\n                }\n            })\n        }\n\n    const onEffectAdded = (monster) =>\n        (effect) => {\n            dispatch({\n                type: 'add_effect',\n                payload: {\n                    id: monster.id,\n                    effect\n                }\n            })\n        }\n \n    return <div>\n        <AddButton to='add' as={Link}>\n            +\n        </AddButton>\n        <ViewContainer>\n            <MonsterWidgetsContainer>\n                {Object.values(monsters).map(monster =>\n                    <MonsterWidget key={monster.id} monster={monster} onDamage={takeDamage(monster)} onEffectRemoved={onEffectRemoved(monster)} onEffectAdded={onEffectAdded(monster)}/>\n                )}\n            </MonsterWidgetsContainer>\n        </ViewContainer>\n    </div>;\n}\n\nexport default MainView;","import React from 'react';\nimport styled from 'styled-components';\n\nexport const FormGroup = styled.div`\n    margin-bottom: 10px;\n`;\n\nexport const FormGroupTitle = styled.span`\n    font-family: 'custom-font';\n    font-style: italic;\n    display: block;\n    font-size: 2rem;\n`;\n\nconst inputBase = (props) => `\n    background-color: rgba(255,255,255, 0.6);\n    font-family: 'pirata-one';\n    border: 2px solid black;\n    color: black;\n    width: 100%;\n    font-size: 2rem;\n    padding-top: 6px;\n\n    @media only screen and (max-device-width: 812px) {\n      padding-top: 0;\n    }\n`;\n\nexport const Input = styled.input`\n    ${inputBase}\n\n    @media only screen and (max-device-width: 812px) {\n      width: 270px;\n    }\n`;\n\nexport const DropDown = styled.select`\n    ${inputBase}\n\n    @media only screen and (max-device-width: 812px) {\n      width: 140px;\n    }\n`;\n\n\nconst CheckboxContainer = styled.div`\n    display: flex;\n    align-items: center;\n    font-family: 'custom-font';\n    font-size: 2em;\n\n    span {\n      padding-top: 8px;\n\n      @media only screen and (max-device-width: 812px) {\n        padding-top: 0;\n      }\n    }\n`;\n\nconst CheckboxStyle = styled.input`\n    appearance: none;\n    ${inputBase}\n    width: 35px;\n    height: 35px;\n    margin: 0 0px 0 0;\n\n    :checked {\n       :after {\n          outline: none;\n          content: \"x\";\n          position: relative;\n          font-size: 2rem;\n          top: -10px;\n          left: 5px;\n\n          @media only screen and (max-device-width: 812px) {\n            top: -8px;\n            left: 8px;\n          }\n       }\n    }\n`;\n\nexport const Checkbox = ({title, checked, onChange}) => {\n    return (\n        <CheckboxContainer>\n            <CheckboxStyle type=\"checkbox\" checked={checked} onChange={onChange}/> <span>{title}</span>\n        </CheckboxContainer>\n    );\n}","import React, {useState} from 'react';\nimport styled from 'styled-components';\nimport { withRouter } from 'react-router-dom';\n\nimport { ViewContainer } from './viewContainer';\nimport { TextButton } from  './button';\nimport { FormGroup, FormGroupTitle, Input, DropDown, Checkbox } from './form';\n\nimport { getState } from '../state'\nimport { getMonsters } from '../data/monsters';\n\nconst StepTitle = styled.h1`\n    :first-child {\n        padding-top: 0;\n        margin-top: 0;\n    }\n    font-family: 'custom-font';\n    font-size: 4rem;\n\n    @media only screen and (max-device-width: 812px)  {\n        font-size: 3rem;\n    }\n`;\n\nconst MonsterSelectionView = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n`;\n\nconst MonsterSelectionItem = styled.img`\n    width: 120px;\n    height: 120px;\n    border: 2px dashed transparent;\n\n    :hover {\n        cursor: pointer;\n    }\n\n    ${props => \n        props.selected ? `\n            border-color: rgba(0, 0, 100, 0.6);\n        `\n        : ``\n    }\n\n    @media only screen and (max-device-width: 812px) {\n        width: 70px;\n        height: 70px;\n    }\n`;\n\nconst AddButton = styled(TextButton)`\n    margin: 20px auto 5vh auto;\n    display: block;\n    padding-left: 30px\n    padding-right: 30px;\n    font-size: 4rem;\n    line-height: 4.8rem;\n    padding-top: 8px;\n    padding-bottom: 0px;\n\n    @media only screen and (max-device-width: 812px) {\n        font-size: 2rem;\n        line-height: 2.4rem;\n        padding-top: 4px;\n    }\n`;\n\nconst AddMonsterView = ({history}) => {\n    const [selectedMonster, setSelectedMonster] = useState();\n    const [monsterLevel, setMonsterLevel] = useState();\n    const [monsterNumbers, setMonsterNumbers] = useState([]);\n    const [isElite, setIsElite] = useState(false);\n\n    const [state, dispatch] = getState();\n\n    const addMonster = () => {\n        monsterNumbers.forEach(x => {\n            dispatch({\n                type: 'add_monster',\n                payload: {\n                    name: selectedMonster.name,\n                    level: monsterLevel,\n                    number: x,\n                    isElite\n                }\n            });\n        });\n\n        history.push('/');\n    }\n\n    const duplicateNumbers = selectedMonster && monsterNumbers && monsterNumbers.length\n        ? monsterNumbers.filter(x => Object.values(state.monsters).filter(m => m.name === selectedMonster.name && m.number === x).length > 0)\n        : [];\n\n    return (\n        <ViewContainer>\n            <StepTitle>1. 选择怪物</StepTitle>\n            <MonsterSelectionView>\n                {getMonsters().map(monster => \n                    <MonsterSelectionItem key={monster.name} src={`./images/monsters/Horz-${monster.name}.png`} selected={selectedMonster && selectedMonster.name === monster.name} onClick={() => setSelectedMonster(monster)}/>\n                )}\n            </MonsterSelectionView>\n                \n            {selectedMonster && \n                <>\n                    <StepTitle>2. 设置属性</StepTitle>\n\n                    <FormGroup>\n                        <FormGroupTitle>等级</FormGroupTitle>\n                        <DropDown value={monsterLevel} onChange={e => setMonsterLevel(e.target.value)}>\n                            {Object.values(selectedMonster.level).map(x => <option key={x.level}>{x.level}</option>)}\n                        </DropDown>\n                    </FormGroup>\n\n                    <FormGroup>\n                        <FormGroupTitle>怪物编号（如有多个用逗号分隔）</FormGroupTitle>\n                        <Input value={monsterNumbers} onChange={e => setMonsterNumbers(e.target.value.split(',').map(x => x.trim()))}/>\n                    </FormGroup>\n\n                    <Checkbox title=\"精英?\" checked={isElite} onChange={e => setIsElite(e.target.checked)}/>\n\n                    <AddButton onClick={addMonster} disabled={!monsterLevel || monsterNumbers.length === 0 || duplicateNumbers.length !== 0}>添加</AddButton>\n\n                    {duplicateNumbers &&\n                        <ul>\n                            {duplicateNumbers.map((x,i) => <li key={i}>Number {x} is already used for {selectedMonster.name}</li>)}\n                        </ul>\n                    }\n                </>\n            }\n            \n        </ViewContainer>\n    );\n}\n\nexport default withRouter(AddMonsterView);","import monsterStats from './monster_stats';\r\n\r\nexport const getMonsters = () =>\r\n    Object.keys(monsterStats.monsters)\r\n        .map(x => ({\r\n            name: x,\r\n            ...monsterStats.monsters[x]\r\n        }));\r\n\r\nexport const getMonsterObject = (id, name, level, number, elite) => {\r\n    const monster = monsterStats.monsters[name];\r\n    const levelInfo = elite ? monster.level[level].elite : monster.level[level].normal;\r\n\r\n    return {\r\n        id,\r\n        name,\r\n        number,\r\n        elite,\r\n        hp: levelInfo.health,\r\n        move: levelInfo.move,\r\n        attack: levelInfo.attack,\r\n        range: levelInfo.range,\r\n        attributes: levelInfo.attributes,\r\n        effects: []\r\n    };\r\n}","import React from 'react';\nimport MainView from './components/mainView';\nimport AddMonsterView from './components/addMonsterView';\n\nimport { Switch, Route, HashRouter } from 'react-router-dom';\n\nfunction App() {\n  document.title = '幽港迷城怪物帮助工具'\n\n  return (\n  \t<HashRouter basename='/'>\n\t    <Switch>\n\t      <Route path='/add' component={AddMonsterView} />\n\t      <Route path='/' match='exact' component={MainView} />\n\t    </Switch>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","const STORAGE_KEY = 'Gloomhaven_Monster_Tracker_Data';\r\n\r\nexport const save = (state) => {\r\n    const data = JSON.stringify(state);\r\n    localStorage.setItem(STORAGE_KEY, data);\r\n\r\n    return state;\r\n}\r\n\r\nexport const load = () => {\r\n    const data = localStorage.getItem(STORAGE_KEY)\r\n\r\n    if(!data){\r\n        return false;\r\n    }\r\n\r\n    return JSON.parse(data);\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router} from 'react-router-dom'\nimport App from './App';\nimport { StateProvider } from './state';\nimport { getInitialState } from './state/initial';\nimport { mainReducer } from './reducer';\n\nimport { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  @font-face {\n    font-family: 'custom-font';\n    src: url('./ZIKUTANGSFXST.ttf');\n  }\n  @font-face {\n    font-family: 'pirata-one';\n    src: url('./PirataOne-Gloomhaven.ttf');\n  }\n\n  #root, body, html {\n    margin: 0;\n    padding: 0;\n    height: 100%;\n    width: 100%;\n    overflow-x: hidden;\n  }\n\n  #root {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background: url(\"./images/background.jpg\") no-repeat center center fixed;\n    background-size: 100% 100%;\n  }\n\n  h1 {\n    margin-block-start: 1rem;\n    margin-block-end: 1rem;\n  }\n`;\n\nReactDOM.render(\n  <StateProvider reducer={mainReducer} initialState={getInitialState()}>\n    <GlobalStyle />\n    <Router>\n      <App />\n    </Router>\n  </StateProvider>\n  , document.getElementById('root'));\n","import { save } from '../state/persist';\r\nimport { getMonsterObject } from '../data/monsters';\r\n\r\nexport const mainReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'take_damage':\r\n            let existingMonster = state.monsters[action.payload.id]\r\n            let newMonster = { ...existingMonster, hp: existingMonster.hp - action.payload.damage };\r\n\r\n            if (newMonster.hp <= 0) {\r\n                var monsterClone = { ...state.monsters };\r\n                delete monsterClone[newMonster.id]\r\n                return save({ ...state, monsters: monsterClone });\r\n            } else {\r\n                return save({ ...state, monsters: { ...state.monsters, [newMonster.id]: newMonster } });\r\n            }\r\n        case 'remove_effect':\r\n            return save({\r\n                ...state,\r\n                monsters: {\r\n                    ...state.monsters,\r\n                    [action.payload.id]: {\r\n                        ...state.monsters[action.payload.id],\r\n                        effects: state.monsters[action.payload.id].effects.filter(x => x !== action.payload.effect)\r\n                    }\r\n                }\r\n            });\r\n        case 'add_effect':\r\n                const currentEffects = state.monsters[action.payload.id].effects;\r\n\r\n                if(currentEffects.indexOf(action.payload.effect) === -1){\r\n                    currentEffects.push(action.payload.effect);\r\n                }\r\n\r\n                return save({\r\n                    ...state,\r\n                    monsters: {\r\n                        ...state.monsters,\r\n                        [action.payload.id]: {\r\n                            ...state.monsters[action.payload.id],\r\n                            effects: currentEffects\r\n                        }\r\n                    }\r\n                });\r\n        case 'add_monster':\r\n            const nextId = Object.values(state.monsters).length;\r\n            const newMonsters = {\r\n                ...state.monsters,\r\n                [nextId]: getMonsterObject(\r\n                    nextId,\r\n                    action.payload.name,\r\n                    action.payload.level,\r\n                    action.payload.number,\r\n                    action.payload.isElite\r\n                )\r\n            };\r\n\r\n            //newMonsters.sort((a,b) => a.name.localeCompare(b.name));\r\n\r\n            return save({\r\n                ...state,\r\n                monsters: newMonsters\r\n            })\r\n        default:\r\n            return state;\r\n    }\r\n};","import { load } from './persist';\r\n\r\nexport const getInitialState = () => {\r\n    const savedState = load();\r\n    if (savedState)\r\n        return savedState;\r\n\r\n    return {\r\n        monsters: {}\r\n    };\r\n}"],"sourceRoot":""}